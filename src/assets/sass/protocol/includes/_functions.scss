// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.


// Convert pixel units to rems, assuming a 16px base size
// Usage:
//    remify(24px)

@function remify($pixels) {
    $rems: $pixels / 16px;
    @return #{$rems}rem;
}


// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// Usage:
//    str-replace($string, ' ', '-')

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


// Collect multiple maps into one big map.
// Sass' native map-merge() function only takes two maps. This function
// gets over that limitation by looping through numerous maps and merging
// them one at a time.
// Usage:
//    $mega-map: map-collect($map-1, $map-2, $map-3)

@function map-collect($maps...) {
  $collection: ();

  @each $map in $maps {
    $collection: map-merge($collection, $map);
  }

  @return $collection;
}


// Get a type scale value from the $theme-type-scale map
// Usage:
//    type-scale('title-xl-size');
//
// Size values are define in pixels. Use with the font-size()
// mixin to output rem with px fallback:
//    @include font-size(type-scale('title-xl-size'));
//
// Line-height values are proportional so they can be called directly:
//    line-height: type-scale('title-xl-line-height');

@function type-scale($scale) {
  @if not $scale {
    @return false;
  }

  @if not map-has-key($theme-type-scale, $scale) {
    @error '`#{$scale}` is not a valid type scale token. '
      + 'Valid tokens: #{map-keys($theme-type-scale)}';
  }

  @return map-get($theme-type-scale, $scale);
}
